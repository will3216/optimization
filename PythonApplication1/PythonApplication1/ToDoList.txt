


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<                                  Program                                 >>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Test ObjectClasses:
+ Check each function
+ Make an error code dictionary
+ Check to see which functions are missing still
>>> 

+ Look into connecting this to a database







>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<                                    g2p                                   >>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
==============================================================================
gams_to_python:                                                     Completion
______________________________________________________________________________
1.                                                                          0%
------------------------------------------------------------------------------
2.                                                                          0%
------------------------------------------------------------------------------
3.                                                                          0%
------------------------------------------------------------------------------
4.                                                                          0%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
==============================================================================



==============================================================================
module1:                                                            Completion
______________________________________________________________________________
1.                                                                          0%
------------------------------------------------------------------------------
2.                                                                          0%
------------------------------------------------------------------------------
3.                                                                          0%
------------------------------------------------------------------------------
4.                                                                          0%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
==============================================================================




>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<                               ObjectClasses                              >>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
==============================================================================
base_equation:                                                      Completion
______________________________________________________________________________
1. __test__()                                                              30%
------------------------------------------------------------------------------
2. __process__()                                                           ???
    + domain testing operations
	+ check domain compatibilities
	+ track imports(make a function 
	  that takes last_func at the 
	  beginning of the while)
    + look for an algorithm that 
	  minimizes the operations 
	  required in domain swapping
	+ break recursion into smaller 
	  pieces
	+ consolidate num_str and 
	  holder_str
	+ rewrite parse_partial_function 
	  in pieces
------------------------------------------------------------------------------
3. __descr__()                                                              0%
------------------------------------------------------------------------------
4. Comment the code step by step                                           90%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
------------------------------------------------------------------------------
6. Descriptions are optional                                                0%
==============================================================================



==============================================================================
direct_assign:                                                      Completion
______________________________________________________________________________
1. __init__()                                                              95%
------------------------------------------------------------------------------
2. __test__()                                                               2%
------------------------------------------------------------------------------
3. __process__()                                                            2%
------------------------------------------------------------------------------
4. __descr__()                                                              1%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
------------------------------------------------------------------------------
6. Descriptions are optional                                                0%
==============================================================================



==============================================================================
equation:                                                           Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                               2%
------------------------------------------------------------------------------
3. __process__()                                                            2%
------------------------------------------------------------------------------
4. __descr__()                                                              1%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
------------------------------------------------------------------------------
6. Descriptions are optional                                                0%
==============================================================================



==============================================================================
fxn_conv_objects:                                                   Completion
______________________________________________________________________________
1. GoodFunctionNames -- List                                              100%
------------------------------------------------------------------------------
2. BasFunctionNames -- List                                               100%
------------------------------------------------------------------------------
3. FunctionInfo -- List -- Tuple(GAMs name, package, name, process type, args)
                                                                          100%
------------------------------------------------------------------------------
4. Does it work with for every test case?                                   0%
==============================================================================



==============================================================================
model_base:                                                         Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. Does it work with for every test case?                                   0%
==============================================================================



==============================================================================
opti_model:                                                         Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                              90%
------------------------------------------------------------------------------
3. __process__()                                                            0%
------------------------------------------------------------------------------
4. __descr__()                                                              0%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
==============================================================================



==============================================================================
parameter_list:                                                     Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                             100%
------------------------------------------------------------------------------
3. __process__()                                                          100%
------------------------------------------------------------------------------
4. __descr__()                                                            100%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                  20%
Input 1:
('b', 'Param List', [['j'], 'demand at market j in cases', True, 
                     [('new-york', '325'), ('chicago', '300')]])
Output 1:
"""demand at market j in cases"""
b = array([325.0,300.0,275.0], dtype=float)


Input 2:
('a', 'Param List', [['i'], 'capacity of plant i in cases', True, 
                     [('seattle', '350'), ('san-diego', '600')]])
Output 2:
"""capacity of plant i in cases"""
a = array([350.0,600.0], dtype=float)



------------------------------------------------------------------------------
6. Descriptions are optional                                              100%
==============================================================================



==============================================================================
scalar:                                                             Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                             100%
------------------------------------------------------------------------------
3. __process__()                                                          100%
------------------------------------------------------------------------------
4. __descr__()                                                            100%
Input 1:
('f', 'Scalar', ['freight in dollars per case per thousand miles', ['90']])
Output 1:
f = array(90.0)
------------------------------------------------------------------------------
5. Does it work with for every test case?                                  20%
------------------------------------------------------------------------------
6. Descriptions are optional                                                0%
==============================================================================



==============================================================================
set:                                                                Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                             100%
------------------------------------------------------------------------------
3. __process__()                                                          100%
------------------------------------------------------------------------------
4. __descr__()                                                            100%
Input 1:
('i', 'Set', ['canning plants', ['seattle', 'san-diego']])
Output 1:
"""
<Set Object>
Identifier = i
Description = canning plants
Labels:
seattle, san-diego
"""
Input 2:
('j', 'Set', ['markets', ['new-york', 'chicago', 'topeka']])
Output 2:
"""
<Set Object>
Identifier = j
Description = markets
Labels:
new-york, chicago, topeka
"""
------------------------------------------------------------------------------
5. Does it work with for every test case?                                  20%
------------------------------------------------------------------------------
6. Descriptions are optional                                                0%
==============================================================================



==============================================================================
table:                                                              Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                             100%
------------------------------------------------------------------------------
3. __process__()                                                          100%
------------------------------------------------------------------------------
4. __descr__()                                                            100%
Input 1:
('d', 'Table', [['i', 'j'], 'distance in thousands of miles',
                True, [['seattle', 'san-diego'], 
                       ['new-york', 'chicago', 'topeka'], 
                       [['2.5', '1.7', '1.8'], ['2.5', '1.8', '1.4']]]])
Output 1:
"""distance in thousands of miles"""
d = array([[2.5, 1.7, 1.8],[2.5, 1.8, 1.4]], dtype= 'float')
------------------------------------------------------------------------------
5. Does it work with for every test case?                                  20%
------------------------------------------------------------------------------
6. Descriptions are optional                                              100%
==============================================================================



==============================================================================
variable:                                                           Completion
______________________________________________________________________________
1. __init__()                                                             100%
------------------------------------------------------------------------------
2. __test__()                                                             100%
------------------------------------------------------------------------------
3. __process__()                                                          100%
------------------------------------------------------------------------------
4. __descr__()                                                            100%
Input 1:
('x', 'Variable', [['i', 'j'], 'shipment quantities in cases', True])
Output 1:
x = Array([shape=(2, 3), dtype='float', iotype='in', 
           desc='shipment quantities in cases'])

Input 2:
('z', 'Variable', [[], 'total transportion costs in 1000s of dollars', True])
Output 2:
z = Array([shape=(), dtype='float', iotype='in', 
           desc='total transportation costs in 1000s of dollars'])
------------------------------------------------------------------------------
5. Does it work with for every test case?                                  20%
==============================================================================




>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<                                    Misc                                  >>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
==============================================================================
custom_np_fxns:                                                     Completion
______________________________________________________________________________
1.                                                                          0%
------------------------------------------------------------------------------
2.                                                                          0%
------------------------------------------------------------------------------
3.                                                                          0%
------------------------------------------------------------------------------
4.                                                                          0%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
==============================================================================



==============================================================================
file_dir_operations:                                                Completion
______________________________________________________________________________
1.                                                                          0%
------------------------------------------------------------------------------
2.                                                                          0%
------------------------------------------------------------------------------
3.                                                                          0%
------------------------------------------------------------------------------
4.                                                                          0%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
==============================================================================



==============================================================================
temp_fxn_builder:                                                   Completion
______________________________________________________________________________
1.                                                                          0%
------------------------------------------------------------------------------
2.                                                                          0%
------------------------------------------------------------------------------
3.                                                                          0%
------------------------------------------------------------------------------
4.                                                                          0%
------------------------------------------------------------------------------
5. Does it work with for every test case?                                   0%
==============================================================================
